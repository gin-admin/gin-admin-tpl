// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package app

import (
	"github.com/gin-admin/gin-admin-tpl/internal/app/api"
	"github.com/gin-admin/gin-admin-tpl/internal/app/dao/demo"
	"github.com/gin-admin/gin-admin-tpl/internal/app/dao/util"
	"github.com/gin-admin/gin-admin-tpl/internal/app/router"
	"github.com/gin-admin/gin-admin-tpl/internal/app/service"
)

import (
	_ "github.com/gin-admin/gin-admin-tpl/internal/app/swagger"
)

// Injectors from wire.go:

// BuildInjector 生成注入器
func BuildInjector() (*Injector, func(), error) {
	auther, cleanup, err := InitAuth()
	if err != nil {
		return nil, nil, err
	}
	db, cleanup2, err := InitGormDB()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	trans := &util.Trans{
		DB: db,
	}
	demoRepo := &demo.DemoRepo{
		DB: db,
	}
	demoSrv := &service.DemoSrv{
		TransRepo: trans,
		DemoRepo:  demoRepo,
	}
	demoAPI := &api.DemoAPI{
		DemoSrv: demoSrv,
	}
	routerRouter := &router.Router{
		Auth:    auther,
		DemoAPI: demoAPI,
	}
	engine := InitGinEngine(routerRouter)
	injector := &Injector{
		Engine: engine,
		Auth:   auther,
	}
	return injector, func() {
		cleanup2()
		cleanup()
	}, nil
}
